# .gemini/config.yaml

# Configuration for Gemini Code Assist on an R package API wrapper repository.
# This file governs how Gemini Code Assist interacts with pull requests,
# aiming for less verbosity and focused feedback specific to R code,
# particularly for API interaction and data handling.

# General settings
# -----------------------------------------------------------------------------

# have_fun:
# Disables fun features such as a poem in the initial pull request summary.
# Set to 'false' for a more professional and concise tone.
have_fun: false

# ignore_patterns:
# A list of glob patterns for files and directories that Gemini Code Assist
# should ignore during interactions (e.g., for code analysis or summarization).
# Useful for excluding R-specific temporary files, cached environments,
# documentation builds, or large data files.
ignore_patterns:
  # R/RStudio specific ignores
  - ".Rproj.user/"          # RStudio project user settings
  - ".Rhistory"             # R console history
  - ".Rdata"                # R workspace data
  - ".Rprofile"             # R startup file
  - ".renv/"                # renv package cache/lockfile directory
  - "renv/library/"         # renv installed packages
  - "renv/activate.R"       # renv activation script
  - "renv/settings.json"    # renv settings
  - "data/"                 # Directory typically containing large data objects in R packages
  - "docs/"                 # pkgdown documentation output
  - "vignettes/"            # R Markdown vignettes (source files might be relevant, but build outputs often large)
  - "pkgdown/"              # pkgdown specific files
  - "inst/extdata/"         # External data
  - "*.rds"                 # R serialized objects (often data)
  - "*.Rds"
  - "*.rda"                 # R data archives
  - "*.RData"
  - "*.tar.gz"              # R package build archives
  - "*.zip"                 # Zipped data or builds
  - "*.log"                 # Log files

  # General development ignores (if applicable)
  - ".git/"                 # Git metadata
  - "target/"               # Common build output directory
  - "build/"                # Common build output directory
  - "tmp/"                  # Temporary directories
  - "cache/"                # Cache directories
  - "**/*.tmp"              # Temporary files
  - "**/*.bak"              # Backup files
  - "**/*.swp"              # Vim swap files
  - "node_modules/"         # If you have any web UI components (e.g., for Shiny apps)
  - "dist/"                 # Distribution folders
  - ".DS_Store"             # macOS specific
  - "Thumbs.db"             # Windows specific

# Code Review settings
# -----------------------------------------------------------------------------

code_review:
  # disable:
  # Disables Gemini from acting on pull requests entirely.
  # Set to 'false' to keep code review functionality active.
  disable: false

  # comment_severity_threshold:
  # The minimum severity of review comments to consider.
  # Options: LOW, MEDIUM, HIGH, CRITICAL.
  # Setting to 'HIGH' will reduce the number of comments to only the most
  # critical and high-priority issues (e.g., security vulnerabilities in API calls,
  # major performance bottlenecks, or non-idiomatic R that causes issues),
  # making feedback less verbose.
  comment_severity_threshold: HIGH

  # max_review_comments:
  # The maximum number of individual review comments to post on a pull request.
  # Use -1 for unlimited. Setting a positive integer (e.g., 5 or 10)
  # will cap the number of comments, focusing on the most important ones.
  max_review_comments: 5 # Limit to top 5 comments

  # pull_request_opened:
  # Configuration for events when a pull request is opened.
  pull_request_opened:
    # help:
    # Posts a help message on pull request open. Defaults to 'false'.
    # Keeping it 'false' reduces initial noise.
    help: false

    # summary:
    # Posts a pull request summary on pull request open. Defaults to 'true'.
    # Keeping 'true' can be useful for a quick overview of changes in R code.
    # Set to 'false' if you want to eliminate all automatic initial PR comments.
    summary: true

    # code_review:
    # Posts a full code review on pull request open. Defaults to 'true'.
    # Setting to 'false' will prevent automatic reviews on every PR,
    # allowing reviews to be triggered manually with '/gemini review' if needed.
    code_review: false
